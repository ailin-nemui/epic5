# IRC II was originally written by Michael Sandrof
# Copyright 1991 Michael Sandrof
# Copyright 1993 Matthew Green
# Copyright 1998 EPIC Software Labs
#
# This software uses your normal, default targets.  It should not be any
# more difficult than anything else to install.
#
# Most useful targets:
#	make		- Compiles ircII and wserv4
#	make install	- Installs ircII and wserv4 and the standard script
#			  library to the normal places
#	make clean	- Remove everything created by compiling
#	make distclean	- make clean + remove autoconf generated stuff
#
# Other interesting targets:
#	make wserv		- Compile just wserv
#	make installwserv 	- Installs just wserv
#	make installepic	- Installs just the epic binary
#	make installscript 	- Installs just the standard script library
#
# @configure_input@

CC = @CC@
DEFS = @DEFS@
LIBS = @LIBS@

# Compiler/Linker flags -- These flags are passed to both the compiler
#			   and the linker.  Common flags include:
# -g 		Include debugging info in the binary.  
# -O		Compiler should do some basic optimizations.  
# -Wall 	For GCC compilers, the -Wall flag turns on lots of additional
#		warning checks.  You can safely ignore any warnings about 
#		"NULL format", as those uses are intentional.
CFLAGS = @CFLAGS@

# Compiler flags -- These flags are passed only to the compiler.
#		    Common flags include:
# -ansi		These two flags turn on "ansi" or "standard" mode on some
# -std1		vendor compilers.  This flag is required for the Digital
#		Alpha 'cc' compiler, and may be required for other compilers
#		that don't allow ansi C extensions without it.  GCC does
#		not require this flag, though EPIC will compile with it.
ANSIFLAGS =

# Linker flags -- These flags are passed only to the linker.
#		  Common flags include:
# -s		Strip all debugging information from the resulting binary. 
# -static	Generate a binary that does not use shared libraries
LDFLAGS = @LDFLAGS@


#
# These are automatically generated by 'configure'.  You really ought to 
# get in the habit of specifying these to 'configure' rather than changing 
# them here. ;-)
#
# Note that some things have changed!  This summarizes the changes:
#
# Script library	old:	/usr/local/lib/irc/script	
#			new:    /usr/local/share/epic5/script
# Help files		old:	/usr/local/lib/irc/help
#			new:    /usr/local/share/epic5/help
# Wserv location	old:	/usr/local/bin/wserv
#			new:	/usr/local/libexec/wserv
#
IP	    = @program_prefix@
prefix      = @prefix@
exec_prefix = @exec_prefix@
bindir      = @bindir@
libexecdir  = @libexecdir@
datarootdir = @datarootdir@
mandir	    = @mandir@

epic5       = @epic5@
epic5_exe   = $(bindir)/$(epic5)
wserv_exe   = $(libexecdir)/$(epic5)-wserv4
epic5dir    = $(datarootdir)/$(epic5)

############ You ought not change anything below this line ###################

RM = rm -f
CP = cp
MV = mv
INSTALL_PROGRAM = install -p -m 755
INSTALL_DATA = install -p -m 644

VERSION  = @VERSION@

SHELL = /bin/sh
MAKE2 = $(MAKE) $(MFLAGS)
MFLAGS ='CC=$(CC)'					\
	'ANSIFLAGS=$(ANSIFLAGS)'			\
	'CFLAGS=$(CFLAGS)'				\
	'DEFS=$(DEFS)'					\
	'INSTALL_WSERV=$(wserv_exe)'			\
	'IRCLIB=$(epic5dir)'				\
	'LDFLAGS=$(LDFLAGS)'				\
	'LIBS=$(LIBS)'					\
	'RM=$(RM)'

# To support parallel make, only recur to subdirectory once
# instead of once for epic5 and once for wserv4.
all everything:
	@+cd source; $(MAKE2) epic5 @WSERV_BIN@
install installeverything: all installbin installscript installman
installbin: installepic5 @WSERV_INSTALL@


VPATH=@srcdir@

#
# Main irc binary
#
epic5:
	@+cd source; $(MAKE2) all

EPIC 	  = $(epic5_exe)-$(VERSION)
EPIC_OLD  = $(epic5_exe).old
EPIC_LINK = $(epic5_exe)
installepic5 installirc: epic5 installdirs 
	$(INSTALL_PROGRAM) source/epic5 $(IP)$(DESTDIR)$(EPIC);	\
	$(RM) $(IP)$(DESTDIR)$(EPIC_LINK); \
	ln -s $(epic5)-$(VERSION) $(IP)$(DESTDIR)$(EPIC_LINK); 

#
# wserv
#
wserv4:
	@+cd source; $(MAKE2) wserv4

WSERV	 = $(wserv_exe)
installwserv4: wserv4 installdirs 
	$(INSTALL_PROGRAM) source/wserv4 $(IP)$(DESTDIR)$(WSERV)


#
# Script library
#
scriptdir = $(epic5dir)/script
installscript: installdirs 
	for i in @srcdir@/script/*; \
	do \
		target=$(IP)$(DESTDIR)$(scriptdir)/`basename $$i`; \
		$(INSTALL_DATA) $$i $$target; \
	done

installman: installdirs
	$(INSTALL_DATA) @srcdir@/doc/epic5.1 $(IP)$(DESTDIR)$(mandir)/man1/$(epic5).1

installdirs:
	umask 022; \
	for i in $(IP)$(DESTDIR)$(epic5dir) \
		 $(IP)$(DESTDIR)$(scriptdir) \
		 $(IP)$(DESTDIR)$(bindir) \
		 $(IP)$(DESTDIR)$(libexecdir) \
		 $(IP)$(DESTDIR)$(mandir)/man1 ; do \
	    if ! test -d $$i ; then mkdir -p $$i ; fi \
	done

clean:
	@-if test -f source/Makefile; then cd source; $(MAKE2) clean; fi

distclean cleandir realclean: clean
	$(RM) Makefile source/Makefile config.status config.cache config.log include/defs.h source/info.c.sh

depend:
	(cd source;make depend)

# This is the end of the file.
